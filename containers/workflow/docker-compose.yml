version: "3.5"

services:
  ## Build postgres docker image
  db:
    image: postgres:12
    container_name: ${DOCKER_PROJECT_NAME}-db-${DOCKER_NAMESPACE}-container
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_ADMIN -p 5432 -d $DB_DATABASE"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${DB_ADMIN}
      - POSTGRES_PASSWORD=${DB_ADMIN_PASS}
      - POSTGRES_DB=${DB_DATABASE}
      - PORT=${DB_PORT}
    networks:
      - local-network
    volumes:
      - postgres:/var/lib/postgresql/data

  # Build the n8n nginx proxy docker image
  n8n_nginx:
    image: nginx:n8n
    container_name: ${DOCKER_PROJECT_NAME}-n8n-nginx-${DOCKER_NAMESPACE}-container
    restart: always
    ports:
      - 5100:5100
    networks:
      - local-network
    depends_on:
      - n8n

  ## Build the n8n workflow automation image
  n8n:
    image: n8n:Dockerfile
    container_name: ${DOCKER_PROJECT_NAME}-n8n-${DOCKER_NAMESPACE}-container
    ports:
      - ${N8N_PORT}:${N8N_PORT}
    environment:
      - NODE_ENV=${NODE_ENV}
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_PORT=${N8N_PORT}
      - WEBHOOK_TUNNEL_URL=${WEBHOOK_TUNNEL_URL}
      - DB_TYPE=${N8N_DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_HOST}
      - DB_POSTGRESDB_USER=${DB_ADMIN}
      - DB_POSTGRESDB_PASSWORD=${DB_ADMIN_PASS}
      - DB_POSTGRESDB_PORT=${DB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_DATABASE}
      - DB_POSTGRESDB_SCHEMA=${N8N_DB_SCHEMA}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_API_HOST=${N8N_API_HOST}
      - N8N_API_PORT=${API_PORT}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    networks:
      - local-network
    volumes:
      - ./n8n/.n8n:/home/node/.n8n
      - n8n:/data
    restart: always # n8n doesnt always start after db_setup is done, and can fail. Always restart to help resolve this.
    command: ["n8n", "start"]

networks:
  local-network:
    driver: bridge

volumes:
  postgres:
    name: ${DOCKER_PROJECT_NAME}-db-${DOCKER_NAMESPACE}-vol
  n8n:
    name: ${DOCKER_PROJECT_NAME}-data-${DOCKER_NAMESPACE}-vol
