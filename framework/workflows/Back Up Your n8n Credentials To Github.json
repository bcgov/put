{
  "active": false,
  "connections": {
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Read Binary Files",
            "type": "main",
            "index": 0
          },
          {
            "node": "From GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflows": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Credentials": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary Files": {
      "main": [
        [
          {
            "node": "From backup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From backup": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "From GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub1": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read Binary Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime1": {
      "main": [
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-03-14T06:24:03.971Z",
  "id": "43",
  "name": "Back Up Your n8n Credentials To Github",
  "nodes": [
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $node.Credentials.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $node.Credentials.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $node[\"Credentials\"].json[\"repo\"][\"path\"] }}{{ $node[\"Postgres\"].json[\"name\"] }}.json",
        "additionalParameters": {}
      },
      "id": "69f188c8-4154-4fd0-8b63-9589e78da822",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        1120,
        340
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "6",
          "name": "GitHub PUT"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "5bd4efa3-78dd-414d-9fc9-5f8bcbd462bd",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2340,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c08e7791-b143-4738-a6ed-6002dfd66079",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2440,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "fc88f585-4ec2-4cb5-968f-d3983dbb44ea",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2440,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $node[\"Credentials\"].json[\"repo\"][\"owner\"] }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $node.Credentials.json.repo.name }}",
          "mode": ""
        },
        "filePath": "={{ $node[\"Credentials\"].json[\"repo\"][\"path\"] }}{{ $node[\"Postgres\"].json[\"name\"] }}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "8b4faeea-b19a-4087-b72b-d2843f9ac4d6",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        2620,
        440
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "6",
          "name": "GitHub PUT"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $node[\"Credentials\"].json[\"repo\"][\"owner\"] }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $node[\"Credentials\"].json[\"repo\"][\"name\"] }}",
          "mode": ""
        },
        "filePath": "={{ $node[\"Credentials\"].json[\"repo\"][\"path\"] }}{{ $node[\"Postgres\"].json[\"name\"] }}.json",
        "fileContent": "{{$node[\"Read Binary Files\"].json.data}}",
        "commitMessage": "=[N8N Backup] {{ $node[\"Postgres\"].json[\"name\"] }}.json [New]"
      },
      "id": "9890630c-0c7a-4fcc-9d7c-fb4523dc567f",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        2620,
        620
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "6",
          "name": "GitHub PUT"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "412b93d8-d9b2-482a-8f77-bc78fe6b3242",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        580,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Credentials Backups\nThis workflow will automatically backup your credentials to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - bcgov\nrepo.name - put\nrepo.path - framework",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "745d79ba-a6c9-4941-80ec-b0cdc0e91a93",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "efeda715-f5f2-4025-988f-481c7fb060c7",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1480,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "01fd5895-8972-4bfb-a072-3e825a969565",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2060,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {}
      },
      "id": "9d813f50-f3bb-46b5-9aa2-4a884f2b0229",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        160,
        120
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "11",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "a1ac20b5-cbc8-4650-ae50-e674698b670f",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        2340,
        1000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {}
          ]
        },
        "options": {}
      },
      "id": "db516f8a-737a-408e-9b9a-fdbffd4c7447",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1780,
        440
      ],
      "typeVersion": 2,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "bcgov"
            },
            {
              "name": "repo.name",
              "value": "put"
            },
            {
              "name": "repo.path",
              "value": "framework/workflows/credentials"
            }
          ]
        },
        "options": {}
      },
      "id": "3f4d056c-6efc-46dd-9b62-61afd67d19a5",
      "name": "Workflows",
      "type": "n8n-nodes-base.set",
      "position": [
        -40,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "bcgov"
            },
            {
              "name": "repo.name",
              "value": "put"
            },
            {
              "name": "repo.path",
              "value": "framework/credentials/"
            }
          ]
        },
        "options": {}
      },
      "id": "bd694101-1dd3-4053-a5b8-b81e330bbe6e",
      "name": "Credentials",
      "type": "n8n-nodes-base.set",
      "position": [
        -100,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select id,name from credentials_entity order by id;",
        "additionalFields": {
          "mode": "independently"
        }
      },
      "id": "bc1a21cb-c43a-4e2d-92f9-4b471205de00",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        260,
        480
      ],
      "credentials": {
        "postgres": {
          "id": "21",
          "name": "N8N database access"
        }
      }
    },
    {
      "parameters": {
        "command": "rm -f *.*\nrm -f -R backups\nmkdir backups\nmkdir backups/credentials\nn8n export:credentials --backup --output=backups/credentials/ > null\n\n"
      },
      "id": "5f0cc5d9-57c7-4cb9-a395-59d38b305ae8",
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        80,
        480
      ]
    },
    {
      "parameters": {},
      "id": "5e971a91-f84b-448a-a053-bd7fc88584ac",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -480,
        600
      ]
    },
    {
      "parameters": {
        "fileSelector": "=/data/backups/credentials/{{ $node.Postgres.json.id }}.json"
      },
      "id": "17d263e8-1e0e-4f8e-9cf3-f08d61ea3e35",
      "name": "Read Binary Files",
      "type": "n8n-nodes-base.readBinaryFiles",
      "typeVersion": 1,
      "position": [
        1360,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"From GitHub\"].json.data }}",
              "operation": "contains",
              "value2": "={{ $node[\"From backup\"].json.data }}"
            }
          ]
        }
      },
      "id": "25fa470a-f223-4ffa-8e85-79e45ae5b4a6",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1960,
        440
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ddbd2649-6090-4fa4-b65a-6410c90ee131",
      "name": "From backup",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        1540,
        480
      ]
    },
    {
      "parameters": {
        "sourceKey": "=data",
        "options": {}
      },
      "id": "301e35ad-c7f7-4396-a92c-a26e460cc18f",
      "name": "From GitHub",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        1360,
        340
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $node.Credentials.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $node.Credentials.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $node[\"Credentials\"].json[\"repo\"][\"path\"] }}{{ $node[\"Postgres\"].json[\"name\"] }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "3f6af075-6532-4a39-a194-e3589de1ba8a",
      "name": "GitHub1",
      "type": "n8n-nodes-base.github",
      "position": [
        760,
        460
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "6",
          "name": "GitHub PUT"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.name }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "487499f7-2413-4bb9-90c3-8c08215edc5b",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        940,
        460
      ]
    },
    {
      "parameters": {
        "command": "=echo {{ $node.Postgres.json.name. }}.json  {{ $node.Postgres.json.id }}.json"
      },
      "id": "dc238540-2d0d-4109-a8b9-f331bc5bc865",
      "name": "Execute Command1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        220,
        880
      ]
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {}
          ]
        },
        "options": {}
      },
      "id": "82a3b11b-7b33-4b34-9ba8-a81baec99904",
      "name": "Compare Datasets",
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2,
      "position": [
        740,
        1000
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "3f39aaf9-0b35-41c9-bb10-74c0260b6819",
      "name": "OneAtATime1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        260,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "7f371023-c718-4d8e-a851-0b54c1ebf135",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2100,
        440
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "saveExecutionProgress": "DEFAULT",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "41"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-02-09T09:22:16.563Z",
      "updatedAt": "2023-02-09T09:22:16.563Z",
      "id": "2",
      "name": "Platform"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-03-22T06:26:52.520Z",
  "versionId": "7f3e3ba4-58f0-4291-8eec-fe7e668fe966"
}